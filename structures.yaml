- name: DoublyLinkedListMap
  implements: Map
  speeds:
    Node:
      detach: 1
    self:
      get: n
      getMin: n
      add: 1 # this is unsafe.
      updateKey: 1 # this can probably be done just by detaching and reattaching. I wonder if this is ever more efficient.
      detach: 1
- name: MinHeap
  implements: MultiMap
  speeds:
    Node:
      detach: 1
    self:
      get: n
      getMin:
        ifColEq:
          arg: 0
          then: 1
          else: n
      add: 1
      updateKey: log(n) # How come decreaseKey is fast in fibonacci trees?
      detach: log(n)
- name: HashMap
  implements: Map
  speeds:
    Node:
      detach: 1
    self:
      get: 1
      getMin: n
      add: 1
      updateKey: 1 # probably pointless
      detach: 1
- name: RedBlackTree
  implements: Map
  speeds:
    Node:
      detach: log(n) # citation needed
    self:
      get: log(n)
      getMin: 1 # might as well memoize on insert. Benchmark this?
      add: log(n)
      updateKey: log(n) # probably pointless